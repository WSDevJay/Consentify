---
slug: module_291/module_iframe/index
response_headers: >
  {
    "X-Frame-Options": null
  }
authorization_policies:
  - modules/siteglide_system/module_is_in_admin
layout: modules/module_291/templates/1
---

{% graphql check_core_table_exist = "modules/module_291/properties/check_core_table_exist" %}
{% if check_core_table_exist.records.results.size == 0 %}
	{% graphql generate_table = "modules/module_291/properties/generate_table" %}
{% endif %}

<div class="mb-4">
	{% include 'modules/module_291/ws_js', context: 'sg' %}
</div>

<h1>Manage Your Cookie Settings</h1>
<p>To integrate this module, copy the tag below and paste it into your site's head section:</p>
<pre>{% raw %}{% include 'modules/module_291/ws_cb' %}{% endraw %}</pre>

<form data-form="create">
	<h3>Color scheme</h3>
	<label for="name">Background* :</label>
	<input required name="background" id="background" type="color" class="form-control mb-4" value="{{ check_core_table_exist.records.results[0].properties['Background'] }}">
	<label for="text">Text* :</label>
	<input required name="text" id="text" class="form-control mb-4" type="color" value="{{ check_core_table_exist.records.results[0].properties['Text'] }}">
	<label for="primaryColor">Primary color* :</label>
	<input required name="primarycolor" id="primarycolor" type="color" class="form-control mb-4" value="{{ check_core_table_exist.records.results[0].properties['Primary color'] }}">

	<h3>Position</h3>
	<select required name="position" id="position" type="color" class="form-control mb-4" value="{{ check_core_table_exist.records.results[0].properties['Position'] }}">
		<option value="center">Center</option>
		<option value="bottomLeft">BottomLeft</option>
		<option value="bottomRight">BottomRight</option>
		<option value="bottomCenter">BottomCenter</option>
	</select>

	<button class="btn btn-primary mb-5" id="submitBtn">Save</button>
</form>

<script>
	const request = ({ form }) => {
		var formData = new FormData(form);
		var data = {};
		for(var field of formData.entries()) {
			data[field[0]] = field[1];
		}

		fetch('/module_291/module_iframe/api/save-item?{% include "modules/siteglide_system/modules/auth" -%}', {
		credentials: "same-origin",
		method: "POST",
		body: JSON.stringify(data),
		headers: {
			SEC_FETCH_DEST: 'iframe'
		}
		}).then(() => {
			Swal.fire({
				title: 'Changes Saved!',
				text: 'Your updates have been successfully saved.',
				icon: 'success',
				confirmButtonText: 'Great!',
				timer: 2000,
				timerProgressBar: true,
			});
			window.location.href="/module_291/module_iframe/index?{% include 'modules/siteglide_system/modules/auth' -%}"
		})
	};
	const Create = event => {
		event.preventDefault();
		request({
			form: event.target
		})
	};
	const createForm = document.querySelector('[data-form="create"]');
	createForm.addEventListener("submit", Create);
</script>